# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-20.04]
        scala: [2.13.10]
        java: [temurin@11]
    runs-on: ${{ matrix.os }}
    env:
      GITHUB_EVENT_BEFORE: ${{ github.event.before }}
      GITHUB_EVENT_AFTER: ${{ github.event.after }}
    steps:
      - name: Clone and checkout to current branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: split Java
        id: java_split
        uses: jungwinter/split@v2
        with:
          msg: ${{ matrix.java }}
          separator: '@'
          maxsplit: 2

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ steps.java_split.outputs._1 }}
          distribution: ${{ steps.java_split.outputs._0 }}
          cache: sbt

      - name: Symlink protobuf
        run: ln -s example/proto proto

      - name: Build images
        run: sbt ++${{ matrix.scala }} githubWorkflowCheck scalafmtCheckAll test

  publish:
    name: Docker Publish
    needs: [build]
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/main')
    strategy:
      matrix:
        os: [ubuntu-20.04]
        scala: [2.13.10]
        java: [temurin@11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Clone and checkout to current branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install buildx
        id: buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          version: latest

      - name: Login to docker hub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login --username "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker publish
        run: 'docker buildx build -t touchdown/gyremock:0.4.2 --platform linux/amd64,linux/arm64 --push .'
